---
import { getCollection } from 'astro:content'
import Layout from '../../layouts/Layout.astro'
import { chains } from '../../content/chains'
import Entry from '../../components/Entry.astro'
import type { Hat, BadHat } from '../../content/trees'
import { isoDate } from '../../utils'

const chainId = (
  Number(Astro.params.chain) as keyof typeof chains
)
const trees = await getCollection('trees', (tree) => (
  tree.id.startsWith(`chain:${chainId}/`)
))

export function getStaticPaths() {
  return Object.keys(chains).map(
    (chain) => ({ params: { chain } })
  )
}
---
<Layout title={`${chains[chainId]} Hats Explorer`}`>
  <main>
    <h1>
      <a href="../">‚Üê</a>
      Hats For Chain: {chains[chainId]} ({chainId})
      as of {isoDate()}
    </h1>

    <ol>
      {trees?.map(({ data: { node: top } }, index) => (
        <li>
          <a href={`/${chainId}/${index + 1}/`}>
            <Entry hat={top as Hat | BadHat} index={index + 1}/>
          </a>
          {top.description && <p>{top.description}</p>}
        </li>
      ))}
    </ol>
  </main>
</Layout>

<style>
	a {
		text-decoration: none;
	}
  a:hover, a:focus {
    color: hotpink;
		text-decoration: underline;
		text-decoration-style: dashed;
	}
  :is(a:hover, a:focus) :global(img) {
    height: 90vh;
    max-width: 100%;
    position: fixed;
    top: 5vh;
    left: 50%;
    transform: translateX(-50%);
  }
</style>
